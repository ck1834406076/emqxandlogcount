server:
  port: 8813
spring:
  application:
    name: edge
  #kafka配置
  datasource:
    name: kafka_data  #数据库名
    #    url: jdbc:my sql://192.168.2.119:3306/v2x_edge?useUnicode=true&ampcharacterEncoding=utf-8&ampserverTimezone=Asia/Shanghai&useSSL=false
    #url: jdbc:mysql://127.0.0.1/kafka_data?useUnicode=true&ampcharacterEncoding=utf-8&ampserverTimezone=UTC&useSSL=false
   # url: jdbc:mysql://119.3.31.181:4306/kafka_data?useUnicode=true&ampcharacterEncoding=utf-8&ampserverTimezone=Asia/Shanghai&useSSL=false
    url: jdbc:mysql://192.168.2.119:3306/kafka_data?useUnicode=true&ampcharacterEncoding=utf-8&ampserverTimezone=Asia/Shanghai&useSSL=false
    #url: jdbc:mysql://192.168.2.119:3306/kafka_data?useUnicode=true&ampcharacterEncoding=utf-8&ampserverTimezone=Asia/Shanghai&useSSL=false
    #url: jdbc:mysql://13.99.25.50:3306/kafka_data?useUnicode=true&ampcharacterEncoding=utf-8&ampserverTimezone=Asia/Shanghai&useSSL=false
    #    url: jdbc:mysql://192.168.126.201:3306/v2x_edge?useUnicode=true&ampcharacterEncoding=utf-8&ampserverTimezone=Asia/Shanghai&useSSL=false
    username: v2x_edge  #用户名
    password: v2x_edge  #密码
    driver-class-name: com.mysql.cj.jdbc.Driver  #数据库链接驱动
    max-idle: 10 #指定连接池最大的空闲连接数量.
    max-wait: 10000 #指定连接池等待连接返回的最大等待时间，毫秒单位.
    min-idle: 5 #指定必须保持连接的最小值(For DBCP and Tomcat connection pools)
    initial-size: 5 #指定启动连接池时，初始建立的连接数量
    validation-query: SELECT 1 #指定获取连接时连接校验的sql查询语句.
    test-on-borrow: false #获取连接时候验证，会影响性能
    test-while-idle: true #当连接空闲时，是否执行连接测试.
    time-between-eviction-runs-millis: 18800 #指定空闲连接检查、废弃连接清理、空闲连接池大小调整之间的操作时间间隔
  kafka:
    #这里改为你的kafka服务器ip和端口号
    bootstrap-servers: 122.112.138.244:9094,119.3.9.172:9094,122.112.164.242:9094
    #bootstrap-servers: 192.168.2.145:9092,192.168.2.117:9092,192.168.2.46:9092
    #bootstrap-servers: 13.99.25.123:9092
    #bootstrap-servers: 122.112.187.142:9092
    #bootstrap-servers: 119.3.51.3:9092
    #bootstrap-servers: 122.112.179.121:9092
    #bootstrap-servers: 192.168.56.101:9093
    #=============== producer  =======================
    producer:
      #如果该值大于零时，表示启用重试失败的发送次数
      retries: 0
      #每当多个记录被发送到同一分区时，生产者将尝试将记录一起批量处理为更少的请求，默认值为16384(单位字节)
      batch-size: 16384
      #生产者可用于缓冲等待发送到服务器的记录的内存总字节数，默认值为3355443
      buffer-memory: 33554432
      compression-type: lz4
      #key的Serializer类，实现类实现了接口org.apache.kafka.common.serialization.Serializer
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      #value的Serializer类，实现类实现了接口org.apache.kafka.common.serialization.Serializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    #=============== consumer  =======================
    consumer:
      #用于标识此使用者所属的使用者组的唯一字符串
      group-id: driver-dev
      #当Kafka中没有初始偏移量或者服务器上不再存在当前偏移量时该怎么办，默认值为latest，表示自动将偏移重置为最新的偏移量
      #可选的值为latest, earliest, none
      auto-offset-reset: earliest
      max-poll-records: 50000
      #消费者的偏移量将在后台定期提交，默认值为true
      enable-auto-commit: false
      #如果'enable-auto-commit'为true，则消费者偏移自动提交给Kafka的频率（以毫秒为单位），默认值为5000。
      auto-commit-interval: 100
      #密钥的反序列化器类，实现类实现了接口org.apache.kafka.common.serialization.Deserializer
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      #值的反序列化器类，实现类实现了接口org.apache.kafka.common.serialization.Deserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    listener:
      # 在侦听器容器中运行的线程数。
      concurrency: 5
      #listner负责ack，每调用一次，就立即commit,开启此功能时，设置enable-auto-commit为false
      ack-mode: manual_immediate
      missing-topics-fatal: false

  mail:
    #网易邮箱必须填这个  qq邮箱为  smtp.qq.com
    host: smtp.qq.com
    #发件人的邮箱
    username: 1834406076@qq.com
    password: hhbqrbnqutydbfdd
    #刚刚生成的授权码
    default-encoding: utf-8
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true



mybatis-plus:
  mapper-locations: classpath*:mapper/*.xml,mapper/appVersion/*.xml  #配置映射文件
  type-aliases-package: com.kfktoexcel.kfktoexcel.entity.db #配置实体类
  configuration:
    map-underscore-to-camel-case: false

mqtt:
  client-id-prefix: v2x_
  #server-uris: tcp://119.3.31.181:30104
  #server-uris: tcp://122.112.187.142:1883
  #server-uris: tcp://10.88.42.114:1883
  #server-uris: tcp://119.3.132.245:1883
  #server-uris: tcp://192.168.2.124:1883
  server-uris: tcp://119.3.51.3:1883
  #server-uris: tcp://119.3.31.181:1883,tcp://121.36.143.78:1883,tcp://122.112.136.178:1883
  #server-uris: tcp://192.168.2.124:1883
  #server-uris: tcp://192.168.56.101:1883
  #server-uris: tcp://121.36.162.247:1885
  #server-uris: tcp://192.168.2.5:1885
  username: admin
  password: public
  keep-alive-interval: 50
  retainenable: false
  consumer:
    client-id: ${random.value}

  #服务端订阅
  #sub-topics: $queue/v2x/v1/RSU/+/map/down,$queue/v2x/v1/edge/123/rsm/up
  sub-topics: $queue/v2x/v1/edge/124/rsm/up

payload:
  count: 70
  jsonarraysize: 512
  async: true
  mqttswitch: true
package:
  cutSwitch: true
  cutSize: 50


http:
  #serverAddr: http://192.168.2.124:18083/api/v4/mqtt/publish_batch
  #serverAddr: http://192.168.56.101:18083/api/v4/mqtt/publish_batch
  serverAddr: http://119.3.31.181:8990/api/v4/mqtt/publish_batch

